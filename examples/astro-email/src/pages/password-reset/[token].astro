---
import { auth } from "@auth/lucia";
import {
	validatePasswordResetToken,
	isValidPasswordResetToken
} from "@auth/tokens";

import MainLayout from "src/layouts/MainLayout.astro";

let errorMessage = "";

const tokenParams = Astro.params.token ?? null;

if (tokenParams) {
	const validToken = await isValidPasswordResetToken(tokenParams);
	if (!validToken) return Astro.redirect("/password-reset");

	const handleFormSubmission = async (): Promise<Response | null> => {
		if (!Astro.locals.isValidFormSubmission()) return null;
		const formData = await Astro.request.formData();
		const password = formData.get("new-password");
		if (password instanceof File || !password) {
			errorMessage = "Invalid password";
			return null;
		}
		try {
			const userId = await validatePasswordResetToken(tokenParams);
			if (!userId) return null;
			let user = await auth.getUser(userId);
			if (!user.emailVerified) {
				user = await auth.updateUserAttributes(user.userId, {
					email_verified: true
				});
			}
			await auth.invalidateAllUserSessions(user.userId);
			await auth.updateKeyPassword("email", user.email, password);
			const session = await auth.createSession(user.userId);
			Astro.locals.auth.setSession(session);
			return Astro.redirect("/", 302);
		} catch (e) {
			console.log(e);
			errorMessage = "An unknown error occurred";
			return null;
		}
	};

	const response = await handleFormSubmission();
	if (response) return response;
}
---

<MainLayout>
	<h1>Reset password</h1>
	<form method="post">
		<label for="new-password">New password</label>
		<input id="new-password" name="new-password" type="password" />
		<input type="submit" value="Reset password" class="button" />
	</form>
	{errorMessage && <p class="error">{errorMessage}</p>}
</MainLayout>
