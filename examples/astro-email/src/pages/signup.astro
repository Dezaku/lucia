---
import { sendEmailVerificationLink } from "@auth/email";
import { generateEmailVerificationToken } from "@auth/tokens";
import { auth } from "@auth/lucia";
import { Prisma } from "@prisma/client";
import { LuciaError } from "lucia";

import MainLayout from "src/layouts/MainLayout.astro";

let errorMessage: string | null = null;
let email = "";

const handleFormSubmission = async (): Promise<Response | null> => {
	if (!Astro.locals.isValidFormSubmission()) return null;
	const formData = await Astro.request.formData();
	email = formData.get("email")?.toString() ?? "";
	if (email === null || !email.includes("@")) {
		errorMessage = "Invalid email";
		return null;
	}
	const password = formData.get("password");
	if (password instanceof File || !password) {
		errorMessage = "Invalid password";
		return null;
	}
	try {
		const user = await auth.createUser({
			key: {
				providerId: "email",
				providerUserId: email,
				password
			},
			attributes: {
				email,
				email_verified: false
			}
		});
		const session = await auth.createSession(user.userId);
		Astro.locals.auth.setSession(session);
		const token = await generateEmailVerificationToken(user.userId);
		await sendEmailVerificationLink(token);
		return Astro.redirect("/email-verification", 302);
	} catch (e) {
		console.log(e);
		if (e instanceof LuciaError && e.message === "AUTH_DUPLICATE_KEY_ID") {
			errorMessage = "Email is already taken";
			return null;
		}
		// duplication error
		if (
			e instanceof Prisma.PrismaClientKnownRequestError &&
			e.code === "P2002"
		) {
			errorMessage = "Email is already taken";
			return null;
		}
		errorMessage = "An unknown error occurred";
		return null;
	}
};

const formSubmissionResponse = await handleFormSubmission();
if (formSubmissionResponse) return formSubmissionResponse;

const session = await Astro.locals.auth.validate();
if (session) {
	if (!session.user.emailVerified) {
		return Astro.redirect("/email-verification", 302);
	}
	return Astro.redirect("/", 302);
}
---

<MainLayout>
	<h2>Create an account</h2>
	<form method="post">
		<label for="email">Email</label><br />
		<input
			id="email"
			name="email"
			value={email?.toString() ?? ""}
		/><br />
		<label for="password">password</label><br />
		<input
			type="password"
			id="password"
			name="password"
		/><br />
		<input type="submit" value="Continue" class="button" />
	</form>
	{errorMessage && <p class="error">{errorMessage}</p>}
	<a href="/login" >Sign in</a>
	<a href="/password-reset" >Forgot password?</a>
</MainLayout>
