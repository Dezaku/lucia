---
import { sendPasswordResetLink } from "@auth/email";
import { generatePasswordResetToken } from "@auth/tokens";
import { prismaClient } from "src/db";

import MainLayout from "src/layouts/MainLayout.astro";

let email = "";
let errorMessage = "";
let success = false;

const handleFormSubmission = async (): Promise<Response | null> => {
	if (!Astro.locals.isValidFormSubmission()) return null;
	const formData = await Astro.request.formData();
	email = formData.get("email")?.toString() ?? "";
	if (email === null || !email.includes("@")) {
		errorMessage = "Invalid email";
		return null;
	}
	try {
		const storedUser = await prismaClient.user.findFirst({
			where: {
				email: email
			}
		});
		if (!storedUser) {
			errorMessage = "Email does not exist";
			return null;
		}
		const userId = storedUser.id;
		const token = await generatePasswordResetToken(userId);
		await sendPasswordResetLink(token);
		success = true;
		return null;
	} catch (e) {
		console.log(e);
		errorMessage = "An unknown error occurred";
		return null;
	}
};

const response = await handleFormSubmission();
if (response) return response;

const session = await Astro.locals.auth.validate();
if (session) {
	return Astro.redirect("/", 302);
}
---

<MainLayout>
	<h1>Reset password</h1>
	<form method="post">
		<label for="email">Email</label>
		<input id="email" name="email" value={email} />
		<input type="submit" value="Send email" class="button" />
	</form>
	{errorMessage && <p class="error">{errorMessage}</p>}
	{
		success && (
			<p class="message">A verification email was sent to your inbox</p>
		)
	}
</MainLayout>
